name: Auto Push to Stage on Release Commit
on:
  push:
    branches:
      - main

jobs:
  release-to-stage:
    if: contains(github.event.head_commit.message, 'release:')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0  # Fetch all history for all branches

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Check if stage branch exists
        id: check_stage
        run: |
          if git ls-remote --heads origin stage | grep -q stage; then
            echo "stage_exists=true" >> $GITHUB_OUTPUT
          else
            echo "stage_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create or update stage branch
        run: |
          if [ "${{ steps.check_stage.outputs.stage_exists }}" = "true" ]; then
            echo "Stage branch exists, checking it out..."
            git checkout -b stage origin/stage
          else
            echo "Stage branch doesn't exist, creating it..."
            git checkout -b stage
          fi

      - name: Merge main into stage
        run: |
          git merge origin/main --no-edit --strategy-option=theirs
        continue-on-error: true

      - name: Check merge status
        id: merge_check
        run: |
          if git diff --name-only --diff-filter=U | grep -q .; then
            echo "merge_conflicts=true" >> $GITHUB_OUTPUT
            echo "❌ Merge conflicts detected!"
            git status
          else
            echo "merge_conflicts=false" >> $GITHUB_OUTPUT
            echo "✅ Merge completed successfully!"
          fi

      - name: Push to stage branch
        if: steps.merge_check.outputs.merge_conflicts == 'false'
        run: |
          git push origin stage

      - name: Create issue on merge conflict
        if: steps.merge_check.outputs.merge_conflicts == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Auto-merge to stage failed - Merge conflicts detected',
              body: `
              The automatic merge from main to stage branch failed due to merge conflicts.
              
              **Commit:** ${{ github.event.head_commit.message }}
              **SHA:** ${{ github.sha }}
              
              Please resolve the conflicts manually and merge to stage.
              `,
              labels: ['merge-conflict', 'urgent']
            })